name: Docker Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOCKER_REGISTRY: "docker.io"
  DOCKER_IMAGE_NAME: "mkbiloniya/sample-website"

jobs:
  # Build and push Docker image
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Deploy to staging (on develop branch)
  deploy-staging:
    name: Deploy to Staging Server
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    environment: staging
    steps:
      - name: Deploy to staging server
        run: |
          echo "üöÄ Deploying to staging server..."
          # Add your staging deployment logic here
          # Example: Deploy to staging server using docker-compose
          # ssh user@staging-server "cd /path/to/app && docker-compose pull && docker-compose up -d"

  # Deploy to production (on main branch)
  deploy-production:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Deploy to production server
        run: |
          echo "üöÄ Deploying to production server..."
          # Add your production deployment logic here
          # Example: Deploy to production server using docker-compose
          # ssh user@production-server "cd /path/to/app && docker-compose pull && docker-compose up -d"

  # Deploy to external server (manual trigger)
  deploy-external:
    name: Deploy to External Server
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    environment: external
    steps:
      - name: Deploy to external server
        run: |
          echo "üöÄ Deploying to external server..."
          # Add your external server deployment logic here
          # Example: Deploy to external server using docker-compose
          # ssh user@external-server "cd /path/to/app && docker-compose pull && docker-compose up -d"

  # Notify deployment status
  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-production, deploy-staging, deploy-external]
    if: always()
    steps:
      - name: Notify on success
        if: success()
        run: |
          echo "‚úÖ Deployment successful!"
          # Add your notification logic here (Slack, email, etc.)

      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          # Add your notification logic here (Slack, email, etc.)
